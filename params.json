{"name":"can-write","tagline":"Test if a file or directory is writable. Because sometimes you just gotta know.","body":"# Usage\r\n\r\n```js\r\nvar canWrite = require('can-write');\r\n\r\nreturn canWrite('/path/to/my/file')\r\n  .then(function(result) {\r\n    if (result) {\r\n      // writable\r\n    } else {\r\n      // not writable\r\n    }\r\n  }, function(err) {\r\n    // some sort of error\r\n  });\r\n  \r\n// alternatively:\r\n  \r\ncanWrite('/path/to/my/file', function(err, result) {\r\n  if (err) {\r\n    // handle error \r\n  } else {\r\n    if (result) {\r\n    // writable\r\n    } else {\r\n      // not writable\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n## Readability\r\n\r\nWritability does not always imply readability.  Think a \"Drop Box\", wherein guest users can put files in, but cannot read the contents.\r\n \r\nTo check readability, pass a truthy second parameter:\r\n  \r\n```js\r\nvar canWrite = require('can-write');\r\n\r\nreturn canWrite('/path/to/my/file', true)\r\n  .then(function(result) {\r\n    if (result) {\r\n      // readable & writable\r\n    } else {\r\n      // either not readable or not writable.\r\n      // if you need to know, call canWrite() again without the flag.\r\n    }\r\n  }, function(err) {\r\n    // some sort of error\r\n  });\r\n```\r\n\r\n# Fair Warning\r\n\r\nIt's an *anti-pattern* to check writability.\r\n\r\nYou generally want to just **do what you're going to do**, then recover from an error.\r\n\r\nFor example, say you need to create a file:\r\n\r\n```js\r\nfs.writeFile('/some/filepath', 'some data', function(err) {\r\n  if (err.code === 'EACCESS') {\r\n    // the file is not writable.\r\n  }\r\n});\r\n```\r\n\r\nIn other words: don't use this module unless you really, *really*, ***really*** need to check whether something is writable.\r\n\r\n# Install\r\n\r\n```shell\r\n$ npm install can-write\r\n```\r\n\r\n# License\r\n\r\nÂ© 2015 [Christopher Hiller](https://boneskull.com).  Licensed MIT.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}